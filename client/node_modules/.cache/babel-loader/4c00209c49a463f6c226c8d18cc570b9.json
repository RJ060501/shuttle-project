{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { httpGetBookings, httpSubmitBooking, httpAbortBooking } from './requests';\n\nfunction useBookings(onSuccessSound, onAbortSound, onFailureSound) {\n  _s();\n\n  const [bookings, saveBookings] = useState([]);\n  const [isPendingBooking, setPendingBooking] = useState(false);\n  const getBookings = useCallback(async () => {\n    const fetchedBookings = await httpGetBookings();\n    saveBookings(fetchedBookings);\n  }, []);\n  useEffect(() => {\n    getBookings();\n  }, [getBookings]);\n  const submitBooking = useCallback(async e => {\n    e.preventDefault(); // setPendingBooking(true);\n\n    const data = new FormData(e.target);\n    const bookingDate = new Date(data.get(\"booking-day\"));\n    const mission = data.get(\"mission-name\");\n    const rider = data.get(\"rider-name\");\n    const trail = data.get(\"trail-selector\");\n    const response = await httpSubmitBooking({\n      bookingDate,\n      mission,\n      rider,\n      trail\n    }); // TODO: Set success based on response.\n\n    const success = false;\n\n    if (success) {\n      getBookings();\n      setTimeout(() => {\n        setPendingBooking(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getBookings, onSuccessSound, onFailureSound]);\n  const abortBooking = useCallback(async id => {\n    const response = await httpAbortBooking(id); // TODO: Set success based on response.\n\n    const success = false;\n\n    if (success) {\n      getBookings();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getBookings, onAbortSound, onFailureSound]);\n  return {\n    bookings,\n    isPendingBooking,\n    submitBooking,\n    abortBooking\n  };\n}\n\n_s(useBookings, \"0Z0gFpCYAnA5jkesIw5/pZJ2iIg=\");\n\nexport default useBookings;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetBookings","httpSubmitBooking","httpAbortBooking","useBookings","onSuccessSound","onAbortSound","onFailureSound","bookings","saveBookings","isPendingBooking","setPendingBooking","getBookings","fetchedBookings","submitBooking","e","preventDefault","data","FormData","target","bookingDate","Date","get","mission","rider","trail","response","success","setTimeout","abortBooking","id"],"sources":["/home/rj0605/Udemy/React/shuttle-project/client/src/hooks/useBookings.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  httpGetBookings,\n  httpSubmitBooking,\n  httpAbortBooking,\n} from './requests';\n\nfunction useBookings(onSuccessSound, onAbortSound, onFailureSound) {\n  const [bookings, saveBookings] = useState([]);\n  const [isPendingBooking, setPendingBooking] = useState(false);\n\n  const getBookings = useCallback(async () => {\n    const fetchedBookings = await httpGetBookings();\n    saveBookings(fetchedBookings);\n  }, []);\n\n  useEffect(() => {\n    getBookings();\n  }, [getBookings]);\n\n  const submitBooking = useCallback(async (e) => {\n    e.preventDefault();\n    // setPendingBooking(true);\n    const data = new FormData(e.target);\n    const bookingDate = new Date(data.get(\"booking-day\"));\n    const mission = data.get(\"mission-name\");\n    const rider = data.get(\"rider-name\");\n    const trail = data.get(\"trail-selector\");\n    const response = await httpSubmitBooking({\n      bookingDate,\n      mission,\n      rider,\n      trail,\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getBookings();\n      setTimeout(() => {\n        setPendingBooking(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getBookings, onSuccessSound, onFailureSound]);\n\n  const abortBooking = useCallback(async (id) => {\n    const response = await httpAbortBooking(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getBookings();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getBookings, onAbortSound, onFailureSound]);\n\n  return {\n    bookings,\n    isPendingBooking,\n    submitBooking,\n    abortBooking,\n  };\n}\n\nexport default useBookings;"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SACEC,eADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,YAJP;;AAMA,SAASC,WAAT,CAAqBC,cAArB,EAAqCC,YAArC,EAAmDC,cAAnD,EAAmE;EAAA;;EACjE,MAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACU,gBAAD,EAAmBC,iBAAnB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EAEA,MAAMY,WAAW,GAAGd,WAAW,CAAC,YAAY;IAC1C,MAAMe,eAAe,GAAG,MAAMZ,eAAe,EAA7C;IACAQ,YAAY,CAACI,eAAD,CAAZ;EACD,CAH8B,EAG5B,EAH4B,CAA/B;EAKAd,SAAS,CAAC,MAAM;IACda,WAAW;EACZ,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;EAIA,MAAME,aAAa,GAAGhB,WAAW,CAAC,MAAOiB,CAAP,IAAa;IAC7CA,CAAC,CAACC,cAAF,GAD6C,CAE7C;;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,MAAf,CAAb;IACA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,GAAL,CAAS,aAAT,CAAT,CAApB;IACA,MAAMC,OAAO,GAAGN,IAAI,CAACK,GAAL,CAAS,cAAT,CAAhB;IACA,MAAME,KAAK,GAAGP,IAAI,CAACK,GAAL,CAAS,YAAT,CAAd;IACA,MAAMG,KAAK,GAAGR,IAAI,CAACK,GAAL,CAAS,gBAAT,CAAd;IACA,MAAMI,QAAQ,GAAG,MAAMxB,iBAAiB,CAAC;MACvCkB,WADuC;MAEvCG,OAFuC;MAGvCC,KAHuC;MAIvCC;IAJuC,CAAD,CAAxC,CAR6C,CAe7C;;IACA,MAAME,OAAO,GAAG,KAAhB;;IACA,IAAIA,OAAJ,EAAa;MACXf,WAAW;MACXgB,UAAU,CAAC,MAAM;QACfjB,iBAAiB,CAAC,KAAD,CAAjB;QACAN,cAAc;MACf,CAHS,EAGP,GAHO,CAAV;IAID,CAND,MAMO;MACLE,cAAc;IACf;EACF,CA1BgC,EA0B9B,CAACK,WAAD,EAAcP,cAAd,EAA8BE,cAA9B,CA1B8B,CAAjC;EA4BA,MAAMsB,YAAY,GAAG/B,WAAW,CAAC,MAAOgC,EAAP,IAAc;IAC7C,MAAMJ,QAAQ,GAAG,MAAMvB,gBAAgB,CAAC2B,EAAD,CAAvC,CAD6C,CAG7C;;IACA,MAAMH,OAAO,GAAG,KAAhB;;IACA,IAAIA,OAAJ,EAAa;MACXf,WAAW;MACXN,YAAY;IACb,CAHD,MAGO;MACLC,cAAc;IACf;EACF,CAX+B,EAW7B,CAACK,WAAD,EAAcN,YAAd,EAA4BC,cAA5B,CAX6B,CAAhC;EAaA,OAAO;IACLC,QADK;IAELE,gBAFK;IAGLI,aAHK;IAILe;EAJK,CAAP;AAMD;;GA5DQzB,W;;AA8DT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}